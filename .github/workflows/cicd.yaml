name: FastAPI CI/CD to GKE

on:
  push:
    branches: [ main ]

env:
  # ðŸ‘‡ Update GAR_REGION to only top-level region (asia/us/europe)
  IMAGE: asia-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/fastapi-user-manager
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # âœ… Fixed: Correct Artifact Registry hostname (no leading dash)
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker asia-docker.pkg.dev --quiet

      - name: Build Docker image
        run: docker build -t $IMAGE:$IMAGE_TAG .

      - name: Push Docker image
        run: |
          docker push $IMAGE:$IMAGE_TAG
          docker tag $IMAGE:$IMAGE_TAG $IMAGE:latest
          docker push $IMAGE:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Get kubeconfig for GKE
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        env:
          IMAGE: ${{ env.IMAGE }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "ðŸš€ Deploying $IMAGE:$IMAGE_TAG to GKE..."
          kubectl set image deployment/user-manager-deployment \
            user-manager=$IMAGE:$IMAGE_TAG --record || true
          kubectl apply -f k8s/service.yaml
          kubectl rollout status deployment/user-manager-deployment --timeout=120s || true
